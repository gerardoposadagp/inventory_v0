-- 01-create-schema.sql

-- Table: countries
-- Stores a list of countries.
CREATE TABLE IF NOT EXISTS countries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    country_name VARCHAR(255) NOT NULL UNIQUE
);
COMMENT ON TABLE countries IS 'Stores a list of countries.';

-- Table: cities
-- Stores a list of cities, linked to a country.
CREATE TABLE IF NOT EXISTS cities (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    city_name VARCHAR(255) NOT NULL,
    country_id BIGINT NOT NULL REFERENCES countries(id),
    UNIQUE(city_name, country_id)
);
COMMENT ON TABLE cities IS 'Stores a list of cities, linked to a country.';

-- Table: facilities
-- Stores information about company facilities.
CREATE TABLE IF NOT EXISTS facilities (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    facility_name VARCHAR(255) NOT NULL,
    country_id BIGINT NOT NULL REFERENCES countries(id),
    city_id BIGINT NOT NULL REFERENCES cities(id),
    address VARCHAR(255),
    phone_number VARCHAR(50),
    enabled BOOLEAN DEFAULT TRUE NOT NULL
);
COMMENT ON TABLE facilities IS 'Stores information about company facilities.';

-- Table: user_profiles
-- Extends Supabase's auth.users table with public profile information.
CREATE TABLE IF NOT EXISTS user_profiles (
    id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    full_name VARCHAR(255),
    country_id BIGINT REFERENCES countries(id),
    city_id BIGINT REFERENCES cities(id),
    facility_id BIGINT REFERENCES facilities(id) ON DELETE SET NULL,
    phone_number VARCHAR(50)
);
COMMENT ON TABLE user_profiles IS 'Extends Supabase''s auth.users table with public profile information.';

-- Table: roles
-- Defines the user roles available in the system.
CREATE TABLE IF NOT EXISTS roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE
);
COMMENT ON TABLE roles IS 'Defines the user roles available in the system.';

-- Table: user_roles
-- Assigns roles to users.
CREATE TABLE IF NOT EXISTS user_roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES user_profiles(id) ON DELETE CASCADE,
    role_id BIGINT NOT NULL REFERENCES roles(id) ON DELETE RESTRICT,
    granted_by UUID REFERENCES auth.users(id),
    granted_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    UNIQUE(user_id, role_id)
);
COMMENT ON TABLE user_roles IS 'Assigns roles to users.';

-- Table: categories
-- Stores categories for inventory items.
CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL UNIQUE
);
COMMENT ON TABLE categories IS 'Stores categories for inventory items.';

-- Table: items
-- Defines the master list of all possible inventory items.
CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_name VARCHAR(255) NOT NULL,
    category_id BIGINT NOT NULL REFERENCES categories(id),
    description TEXT,
    origin_country_id BIGINT REFERENCES countries(id),
    enabled BOOLEAN DEFAULT TRUE NOT NULL
);
COMMENT ON TABLE items IS 'Defines the master list of all possible inventory items.';

-- Table: inventory
-- Tracks the quantity and status of items at each facility.
CREATE TABLE IF NOT EXISTS inventory (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    facility_id BIGINT NOT NULL REFERENCES facilities(id) ON DELETE CASCADE,
    item_id BIGINT NOT NULL REFERENCES items(id) ON DELETE RESTRICT,
    quantity INT NOT NULL CHECK (quantity >= 0),
    expiration_date DATE,
    UNIQUE(facility_id, item_id)
);
COMMENT ON TABLE inventory IS 'Tracks the quantity and status of items at each facility.';
